import jsPDF from 'jspdf';
import html2canvas from 'html2canvas';
import QRCode from 'qrcode';

// Language translations
const translations = {
  en: {
    title: 'Muslim Finance Tracker',
    subtitle: 'Personal Finance Report',
    name: 'Name',
    email: 'Email',
    reportDate: 'Report Date',
    time: 'Time',
    financialSummary: 'Financial Summary',
    category: 'Category',
    amount: 'Amount (BDT)',
    totalIncome: 'Total Income',
    totalExpense: 'Total Expense',
    currentBalance: 'Current Balance',
    monthlyIncome: 'Monthly Income',
    monthlyExpense: 'Monthly Expense',
    monthlySavings: 'Monthly Savings',
    transactionHistory: 'Transaction History (Recent 15)',
    date: 'Date',
    type: 'Type',
    income: 'Income',
    expense: 'Expense',
    description: 'Description',
    loanDetails: 'Loan Details',
    loanType: 'Type',
    person: 'Person',
    remaining: 'Remaining',
    status: 'Status',
    given: 'Given',
    taken: 'Taken',
    paid: 'Paid',
    partial: 'Partial',
    pending: 'Pending',
    scanQR: 'Scan QR Code',
    visitWebsite: 'Visit Website',
    generatedBy: 'Generated by Muslim Finance Tracker',
    generatedOn: 'Generated on',
    copyright: '© 2024 Muslim Programmer',
    rights: 'All Rights Reserved',
    website: 'muslim-finance-tracker.vercel.app'
  },
  bn: {
    title: 'মুসলিম ফাইন্যান্স ট্র্যাকার',
    subtitle: 'ব্যক্তিগত আর্থিক প্রতিবেদন',
    name: 'নাম',
    email: 'ইমেইল',
    reportDate: 'রিপোর্ট তারিখ',
    time: 'সময়',
    financialSummary: 'আর্থিক সারসংক্ষেপ',
    category: 'বিষয়',
    amount: 'পরিমাণ (৳)',
    totalIncome: 'মোট আয়',
    totalExpense: 'মোট খরচ',
    currentBalance: 'বর্তমান ব্যালেন্স',
    monthlyIncome: 'মাসিক আয়',
    monthlyExpense: 'মাসিক খরচ',
    monthlySavings: 'মাসিক সঞ্চয়',
    transactionHistory: 'লেনদেনের ইতিহাস (সর্বশেষ ১৫টি)',
    date: 'তারিখ',
    type: 'ধরন',
    income: 'আয়',
    expense: 'খরচ',
    description: 'বিবরণ',
    loanDetails: 'ঋণের বিবরণ',
    loanType: 'ধরন',
    person: 'ব্যক্তি',
    remaining: 'বাকি',
    status: 'স্ট্যাটাস',
    given: 'দেওয়া',
    taken: 'নেওয়া',
    paid: 'পরিশোধিত',
    partial: 'আংশিক',
    pending: 'বকেয়া',
    scanQR: 'QR কোড স্ক্যান করুন',
    visitWebsite: 'ওয়েবসাইট ভিজিট করুন',
    generatedBy: 'মুসলিম ফাইন্যান্স ট্র্যাকার দ্বারা তৈরি',
    generatedOn: 'তৈরির তারিখ ও সময়',
    copyright: '© ২০২৪ মুসলিম প্রোগ্রামার',
    rights: 'সর্বস্বত্ব সংরক্ষিত',
    website: 'muslim-finance-tracker.vercel.app'
  },
  ar: {
    title: 'متتبع المالية الإسلامية',
    subtitle: 'تقرير مالي شخصي',
    name: 'الاسم',
    email: 'البريد الإلكتروني',
    reportDate: 'تاريخ التقرير',
    time: 'الوقت',
    financialSummary: 'ملخص مالي',
    category: 'الفئة',
    amount: 'المبلغ (BDT)',
    totalIncome: 'إجمالي الدخل',
    totalExpense: 'إجمالي المصروفات',
    currentBalance: 'الرصيد الحالي',
    monthlyIncome: 'الدخل الشهري',
    monthlyExpense: 'المصروفات الشهرية',
    monthlySavings: 'الادخار الشهري',
    transactionHistory: 'سجل المعاملات (آخر 15)',
    date: 'التاريخ',
    type: 'النوع',
    income: 'دخل',
    expense: 'مصروف',
    description: 'الوصف',
    loanDetails: 'تفاصيل القروض',
    loanType: 'النوع',
    person: 'الشخص',
    remaining: 'المتبقي',
    status: 'الحالة',
    given: 'معطى',
    taken: 'مأخوذ',
    paid: 'مدفوع',
    partial: 'جزئي',
    pending: 'معلق',
    scanQR: 'امسح QR',
    visitWebsite: 'زيارة الموقع',
    generatedBy: 'تم الإنشاء بواسطة متتبع المالية الإسلامية',
    generatedOn: 'تاريخ الإنشاء',
    copyright: '© 2024 Muslim Programmer',
    rights: 'جميع الحقوق محفوظة',
    website: 'muslim-finance-tracker.vercel.app'
  },
  hi: {
    title: 'मुस्लिम फाइनेंस ट्रैकर',
    subtitle: 'व्यक्तिगत वित्त रिपोर्ट',
    name: 'नाम',
    email: 'ईमेल',
    reportDate: 'रिपोर्ट तिथि',
    time: 'समय',
    financialSummary: 'वित्तीय सारांश',
    category: 'श्रेणी',
    amount: 'राशि (BDT)',
    totalIncome: 'कुल आय',
    totalExpense: 'कुल व्यय',
    currentBalance: 'वर्तमान बैलेंस',
    monthlyIncome: 'मासिक आय',
    monthlyExpense: 'मासिक व्यय',
    monthlySavings: 'मासिक बचत',
    transactionHistory: 'लेन-देन इतिहास (हाल के 15)',
    date: 'तारीख',
    type: 'प्रकार',
    income: 'आय',
    expense: 'व्यय',
    description: 'विवरण',
    loanDetails: 'ऋण विवरण',
    loanType: 'प्रकार',
    person: 'व्यक्ति',
    remaining: 'शेष',
    status: 'स्थिति',
    given: 'दिया गया',
    taken: 'लिया गया',
    paid: 'चुकाया गया',
    partial: 'आंशिक',
    pending: 'लंबित',
    scanQR: 'QR स्कैन करें',
    visitWebsite: 'वेबसाइट पर जाएं',
    generatedBy: 'मुस्लिम फाइनेंस ट्रैकर द्वारा जनरेट किया गया',
    generatedOn: 'निर्माण तिथि और समय',
    copyright: '© 2024 Muslim Programmer',
    rights: 'सर्वाधिकार सुरक्षित',
    website: 'muslim-finance-tracker.vercel.app'
  },
  ur: {
    title: 'مسلم فنانس ٹریکر',
    subtitle: 'ذاتی مالی رپورٹ',
    name: 'نام',
    email: 'ای میل',
    reportDate: 'رپورٹ کی تاریخ',
    time: 'وقت',
    financialSummary: 'مالی خلاصہ',
    category: 'زمرہ',
    amount: 'رقم (BDT)',
    totalIncome: 'کل آمدنی',
    totalExpense: 'کل اخراجات',
    currentBalance: 'موجودہ بیلنس',
    monthlyIncome: 'ماہانہ آمدنی',
    monthlyExpense: 'ماہانہ اخراجات',
    monthlySavings: 'ماہانہ بچت',
    transactionHistory: 'لین دین کی تاریخ (حالیہ 15)',
    date: 'تاریخ',
    type: 'قسم',
    income: 'آمدنی',
    expense: 'خرچ',
    description: 'تفصیل',
    loanDetails: 'قرض کی تفصیلات',
    loanType: 'قسم',
    person: 'شخص',
    remaining: 'باقی',
    status: 'حالت',
    given: 'دیے گئے',
    taken: 'لیے گئے',
    paid: 'ادا شدہ',
    partial: 'جزوی',
    pending: 'زیر التواء',
    scanQR: 'QR سکین کریں',
    visitWebsite: 'ویب سائٹ وزٹ کریں',
    generatedBy: 'مسلم فنانس ٹریکر کے ذریعے تیار',
    generatedOn: 'تیاری کی تاریخ اور وقت',
    copyright: '© 2024 Muslim Programmer',
    rights: 'تمام حقوق محفوظ',
    website: 'muslim-finance-tracker.vercel.app'
  }
};

const categoryTranslations = {
  en: {
    'বেতন': 'Salary',
    'ব্যবসা': 'Business',
    'ফ্রিল্যান্সিং': 'Freelancing',
    'খাবার': 'Food',
    'যাতায়াত': 'Transport',
    'বিল': 'Bills',
    'শিক্ষা': 'Education',
    'স্বাস্থ্য': 'Health',
    'দান-সাদাকা': 'Charity',
    'অন্যান্য': 'Other'
  },
  bn: {
    'বেতন': 'বেতন',
    'ব্যবসা': 'ব্যবসা',
    'ফ্রিল্যান্সিং': 'ফ্রিল্যান্সিং',
    'খাবার': 'খাবার',
    'যাতায়াত': 'যাতায়াত',
    'বিল': 'বিল',
    'শিক্ষা': 'শিক্ষা',
    'স্বাস্থ্য': 'স্বাস্থ্য',
    'দান-সাদাকা': 'দান-সাদাকা',
    'অন্যান্য': 'অন্যান্য'
  },
  ar: {
    'বেতন': 'الراتب',
    'ব্যবসা': 'العمل',
    'ফ্রিল্যান্সিং': 'العمل الحر',
    'খাবার': 'الطعام',
    'যাতায়াত': 'النقل',
    'বিল': 'الفواتير',
    'শিক্ষা': 'التعليم',
    'স্বাস্থ্য': 'الصحة',
    'দান-সাদাকা': 'الصدقة',
    'অন্যান্য': 'أخرى'
  },
  hi: {
    'বেতন': 'वेतन',
    'ব্যবসা': 'व्यवसाय',
    'ফ্রিল্যান্সিং': 'फ्रीलांसिंग',
    'খাবার': 'भोजन',
    'যাতায়াত': 'यातायात',
    'বিল': 'बिल',
    'শিক্ষা': 'शिक्षा',
    'স্বাস্থ্য': 'स्वास्थ्य',
    'দান-সাদাকা': 'दान',
    'অন্যান্য': 'अन्य'
  },
  ur: {
    'বেতন': 'تنخواہ',
    'ব্যবসা': 'کاروبار',
    'ফ্রিল্যান্সিং': 'فری لانسنگ',
    'খাবার': 'کھانا',
    'যাতায়াত': 'آمدورفت',
    'বিল': 'بل',
    'শিক্ষা': 'تعلیم',
    'স্বাস্থ্য': 'صحت',
    'দান-সাদাকা': 'خیرات',
    'অন্যান্য': 'دیگر'
  }
};

export const generateFinancialReport = async (userData, transactions, loans, stats, language = 'en') => {
  const t = translations[language] || translations.en;
  const categoryMap = categoryTranslations[language] || categoryTranslations.en;

  // Create temporary div
  const reportElement = document.createElement('div');
  reportElement.style.position = 'fixed';
  reportElement.style.left = '-10000px';
  reportElement.style.top = '0';
  reportElement.style.width = '800px';
  reportElement.style.padding = '30px';
  reportElement.style.backgroundColor = 'white';
  reportElement.style.fontFamily = "'Noto Sans Bengali', 'Noto Sans Arabic', 'Noto Sans Devanagari', 'Noto Nastaliq Urdu', 'Helvetica', 'Arial', sans-serif";
  reportElement.style.zIndex = '10000';
  reportElement.style.lineHeight = '1.5';

  const now = new Date();
  const dateStr = now.toLocaleDateString(language === 'bn' ? 'bn-BD' : language === 'ar' ? 'ar-SA' : language === 'hi' ? 'hi-IN' : language === 'ur' ? 'ur-PK' : 'en-US', {
    year: 'numeric',
    month: 'long',
    day: 'numeric'
  });
  const timeStr = now.toLocaleTimeString(language === 'bn' ? 'bn-BD' : language === 'ar' ? 'ar-SA' : language === 'hi' ? 'hi-IN' : language === 'ur' ? 'ur-PK' : 'en-US', {
    hour: '2-digit',
    minute: '2-digit',
    second: '2-digit',
    hour12: language !== 'ar'
  });

  // ✅ Generate QR Code
  const qrCodeDataUrl = await QRCode.toDataURL('https://muslim-finance-tracker.vercel.app', {
    width: 500,
    margin: 2,
    errorCorrectionLevel: 'H',
    color: {
      dark: '#000000',
      light: '#FFFFFF'
    }
  });

  // ✅ Load Mosque SVG Icon (embedded as base64)
  const mosqueIconSvg = `data:image/svg+xml;base64,${btoa(`
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100" width="50" height="50">
      <circle cx="50" cy="50" r="45" fill="#22c55e"/>
      <text x="50" y="70" font-size="50" text-anchor="middle" fill="white">🕌</text>
    </svg>
  `)}`;

  // Build HTML content
  reportElement.innerHTML = `
    <div style="width: 100%; background: white; color: #333; font-size: 12px; line-height: 1.5;">
      <!-- Header -->
      <div style="display: flex; align-items: center; margin-bottom: 25px; border-bottom: 3px solid #22c55e; padding-bottom: 15px;">
        <!-- ✅ Mosque Icon -->
        <div style="margin-right: 15px;">
          <img src="${mosqueIconSvg}" style="width: 50px; height: 50px; display: block;" alt="Mosque" />
        </div>
        <div style="flex: 1;">
          <div style="font-size: 22px; font-weight: bold; color: #22c55e; margin-bottom: 5px;">
            ${t.title}
          </div>
          <div style="font-size: 14px; color: #666; font-weight: 500;">
            ${t.subtitle}
          </div>
        </div>
      </div>

      <!-- User Info -->
      <div style="margin-bottom: 20px; display: grid; grid-template-columns: 1fr 1fr; gap: 15px; background: #f8f9fa; padding: 15px; border-radius: 8px;">
        <div>
          <div style="margin-bottom: 6px;">
            <strong>${t.name}:</strong> ${userData.name || 'User'}
          </div>
          <div>
            <strong>${t.email}:</strong> ${userData.email || ''}
          </div>
        </div>
        <div style="text-align: ${language === 'ar' || language === 'ur' ? 'left' : 'right'};">
          <div style="margin-bottom: 6px;">
            <strong>${t.reportDate}:</strong> ${dateStr}
          </div>
          <div>
            <strong>${t.time}:</strong> ${timeStr}
          </div>
        </div>
      </div>

      <!-- Financial Summary -->
      <div style="margin-bottom: 25px;">
        <h2 style="color: #22c55e; border-left: 4px solid #22c55e; padding-left: 12px; margin-bottom: 12px; font-size: 16px; font-weight: bold;">
          ${t.financialSummary}
        </h2>
        <table style="width: 100%; border-collapse: collapse; border: 1px solid #e2e8f0;">
          <thead>
            <tr style="background: linear-gradient(135deg, #22c55e, #16a34a); color: white;">
              <th style="padding: 12px; text-align: center; vertical-align: middle; border: 1px solid #cbd5e0; font-size: 11px; font-weight: 600;">
                ${t.category}
              </th>
              <th style="padding: 12px; text-align: center; vertical-align: middle; border: 1px solid #cbd5e0; font-size: 11px; font-weight: 600;">
                ${t.amount}
              </th>
            </tr>
          </thead>
          <tbody>
            ${[
              { key: 'totalIncome', value: stats.totalIncome },
              { key: 'totalExpense', value: stats.totalExpense },
              { key: 'currentBalance', value: stats.balance },
              { key: 'monthlyIncome', value: stats.monthlyIncome },
              { key: 'monthlyExpense', value: stats.monthlyExpense },
              { key: 'monthlySavings', value: stats.monthlyIncome - stats.monthlyExpense }
            ].map((item, index) => `
              <tr style="${index % 2 === 0 ? 'background: #f8fafc;' : 'background: white;'}">
                <td style="padding: 10px; border: 1px solid #e2e8f0; text-align: center; vertical-align: middle; font-size: 11px;">
                  ${t[item.key]}
                </td>
                <td style="padding: 10px; border: 1px solid #e2e8f0; text-align: center; vertical-align: middle; font-weight: 600; font-size: 11px; color: ${item.key.includes('Expense') ? '#ef4444' : item.key.includes('Balance') || item.key.includes('Savings') ? '#22c55e' : '#333'};">
                  ${item.value.toLocaleString(language === 'bn' ? 'bn-BD' : language === 'ar' ? 'ar-SA' : language === 'hi' ? 'hi-IN' : language === 'ur' ? 'ur-PK' : 'en-US')}
                </td>
              </tr>
            `).join('')}
          </tbody>
        </table>
      </div>

      <!-- Transactions -->
      ${transactions && transactions.length > 0 ? `
        <div style="margin-bottom: 25px;">
          <h2 style="color: #22c55e; border-left: 4px solid #22c55e; padding-left: 12px; margin-bottom: 12px; font-size: 16px; font-weight: bold;">
            ${t.transactionHistory}
          </h2>
          <table style="width: 100%; border-collapse: collapse; border: 1px solid #e2e8f0; font-size: 10px;">
            <thead>
              <tr style="background: linear-gradient(135deg, #22c55e, #16a34a); color: white;">
                <th style="padding: 10px; text-align: center; vertical-align: middle; border: 1px solid #cbd5e0; font-weight: 600;">
                  ${t.date}
                </th>
                <th style="padding: 10px; text-align: center; vertical-align: middle; border: 1px solid #cbd5e0; font-weight: 600;">
                  ${t.type}
                </th>
                <th style="padding: 10px; text-align: center; vertical-align: middle; border: 1px solid #cbd5e0; font-weight: 600;">
                  ${t.category}
                </th>
                <th style="padding: 10px; text-align: center; vertical-align: middle; border: 1px solid #cbd5e0; font-weight: 600;">
                  ${t.amount}
                </th>
                <th style="padding: 10px; text-align: center; vertical-align: middle; border: 1px solid #cbd5e0; font-weight: 600;">
                  ${t.description}
                </th>
              </tr>
            </thead>
            <tbody>
              ${transactions.slice(0, 15).map((transaction, index) => {
                const translatedCategory = categoryMap[transaction.category] || transaction.category;
                return `
                  <tr style="${index % 2 === 0 ? 'background: #f8fafc;' : 'background: white;'}">
                    <td style="padding: 8px; border: 1px solid #e2e8f0; text-align: center; vertical-align: middle;">
                      ${new Date(transaction.date).toLocaleDateString(language === 'bn' ? 'bn-BD' : language === 'ar' ? 'ar-SA' : language === 'hi' ? 'hi-IN' : language === 'ur' ? 'ur-PK' : 'en-US')}
                    </td>
                    <td style="padding: 8px; border: 1px solid #e2e8f0; text-align: center; vertical-align: middle;">
                      <span style="color: ${transaction.type === 'income' ? '#22c55e' : '#ef4444'}; font-weight: 600;">
                        ${transaction.type === 'income' ? t.income : t.expense}
                      </span>
                    </td>
                    <td style="padding: 8px; border: 1px solid #e2e8f0; text-align: center; vertical-align: middle;">
                      ${translatedCategory}
                    </td>
                    <td style="padding: 8px; border: 1px solid #e2e8f0; text-align: center; vertical-align: middle; font-weight: 600; color: ${transaction.type === 'income' ? '#22c55e' : '#ef4444'};">
                      ${transaction.amount.toLocaleString(language === 'bn' ? 'bn-BD' : language === 'ar' ? 'ar-SA' : language === 'hi' ? 'hi-IN' : language === 'ur' ? 'ur-PK' : 'en-US')}
                    </td>
                    <td style="padding: 8px; border: 1px solid #e2e8f0; text-align: center; vertical-align: middle;">
                      ${transaction.description || '-'}
                    </td>
                  </tr>
                `;
              }).join('')}
            </tbody>
          </table>
        </div>
      ` : ''}

      <!-- Loans -->
      ${loans && loans.length > 0 ? `
        <div style="margin-bottom: 30px;">
          <h2 style="color: #f97316; border-left: 4px solid #f97316; padding-left: 12px; margin-bottom: 12px; font-size: 16px; font-weight: bold;">
            ${t.loanDetails}
          </h2>
          <table style="width: 100%; border-collapse: collapse; border: 1px solid #e2e8f0; font-size: 10px;">
            <thead>
              <tr style="background: linear-gradient(135deg, #f97316, #ea580c); color: white;">
                <th style="padding: 10px; text-align: center; vertical-align: middle; border: 1px solid #cbd5e0; font-weight: 600;">
                  ${t.loanType}
                </th>
                <th style="padding: 10px; text-align: center; vertical-align: middle; border: 1px solid #cbd5e0; font-weight: 600;">
                  ${t.person}
                </th>
                <th style="padding: 10px; text-align: center; vertical-align: middle; border: 1px solid #cbd5e0; font-weight: 600;">
                  ${t.amount}
                </th>
                <th style="padding: 10px; text-align: center; vertical-align: middle; border: 1px solid #cbd5e0; font-weight: 600;">
                  ${t.remaining}
                </th>
                <th style="padding: 10px; text-align: center; vertical-align: middle; border: 1px solid #cbd5e0; font-weight: 600;">
                  ${t.status}
                </th>
              </tr>
            </thead>
            <tbody>
              ${loans.map((loan, index) => `
                <tr style="${index % 2 === 0 ? 'background: #f8fafc;' : 'background: white;'}">
                  <td style="padding: 8px; border: 1px solid #e2e8f0; text-align: center; vertical-align: middle;">
                    <span style="color: ${loan.type === 'given' ? '#22c55e' : '#ef4444'}; font-weight: 600;">
                      ${loan.type === 'given' ? t.given : t.taken}
                    </span>
                  </td>
                  <td style="padding: 8px; border: 1px solid #e2e8f0; text-align: center; vertical-align: middle;">
                    ${loan.personName}
                  </td>
                  <td style="padding: 8px; border: 1px solid #e2e8f0; text-align: center; vertical-align: middle; font-weight: 600;">
                    ${loan.amount.toLocaleString(language === 'bn' ? 'bn-BD' : language === 'ar' ? 'ar-SA' : language === 'hi' ? 'hi-IN' : language === 'ur' ? 'ur-PK' : 'en-US')}
                  </td>
                  <td style="padding: 8px; border: 1px solid #e2e8f0; text-align: center; vertical-align: middle; font-weight: 600; color: ${loan.remainingAmount > 0 ? '#ef4444' : '#22c55e'};">
                    ${loan.remainingAmount.toLocaleString(language === 'bn' ? 'bn-BD' : language === 'ar' ? 'ar-SA' : language === 'hi' ? 'hi-IN' : language === 'ur' ? 'ur-PK' : 'en-US')}
                  </td>
                  <td style="padding: 8px; border: 1px solid #e2e8f0; text-align: center; vertical-align: middle;">
                    <span style="color: ${loan.status === 'paid' ? '#22c55e' : loan.status === 'partial' ? '#f59e0b' : '#ef4444'}; font-weight: 600;">
                      ${loan.status === 'paid' ? t.paid : loan.status === 'partial' ? t.partial : t.pending}
                    </span>
                  </td>
                </tr>
              `).join('')}
            </tbody>
          </table>
        </div>
      ` : ''}

      <!-- ✅ Footer with QR Code -->
      <div style="display: flex; justify-content: space-between; align-items: center; margin-top: 50px; padding: 25px; background: linear-gradient(135deg, #f0fdf4, #dcfce7); border-radius: 12px; border: 2px solid #22c55e;">
        
        <!-- Left: Generated Info -->
        <div style="flex: 1;">
          <div style="font-weight: 700; color: #166534; margin-bottom: 6px; font-size: 11px;">
            ${t.generatedBy}
          </div>
          <div style="color: #15803d; font-size: 10px; font-weight: 500; margin-bottom: 4px;">
            ${t.generatedOn}:
          </div>
          <div style="color: #15803d; font-size: 10px; font-weight: 600;">
            ${dateStr}
          </div>
          <div style="color: #15803d; font-size: 10px; font-weight: 600;">
            ${timeStr}
          </div>
        </div>

        <!-- ✅ Center: QR Code -->
        <div style="flex: 0 0 auto; text-align: center; margin: 0 25px;">
          <div style="background: white; padding: 15px; border-radius: 12px; display: inline-block; box-shadow: 0 8px 16px rgba(0,0,0,0.3); border: 4px solid #22c55e;">
            <img src="${qrCodeDataUrl}" style="width: 100px; height: 100px; display: block;" alt="QR Code" />
          </div>
          <div style="margin-top: 10px;">
            <div style="font-weight: 700; color: #166534; font-size: 10px; margin-bottom: 3px;">
              ${t.scanQR}
            </div>
            <div style="color: #22c55e; font-weight: 700; font-size: 10px; text-decoration: underline;">
              ${t.website}
            </div>
          </div>
        </div>

        <!-- Right: Copyright -->
        <div style="flex: 1; text-align: right;">
          <div style="color: #15803d; font-size: 10px; font-weight: 600;">
            ${t.copyright}
          </div>
          <div style="color: #22c55e; font-size: 9px; font-weight: 500;">
            ${t.rights}
          </div>
        </div>
      </div>

    </div>
  `;

  // Add to document
  document.body.appendChild(reportElement);

  try {
    // ✅ Wait for fonts and images to load
    await new Promise(resolve => setTimeout(resolve, 1200));

    // ✅ Convert HTML to canvas with MAXIMUM quality
    const canvas = await html2canvas(reportElement, {
      scale: 3,
      useCORS: true,
      allowTaint: true,
      logging: false,
      width: 800,
      height: reportElement.scrollHeight,
      windowWidth: 800,
      backgroundColor: '#ffffff',
      imageTimeout: 0,
      foreignObjectRendering: false
    });

    // Remove temporary element
    document.body.removeChild(reportElement);

    // Create PDF
    const pdf = new jsPDF('p', 'mm', 'a4');
    const imgWidth = 210;
    const pageHeight = 297;
    const imgHeight = (canvas.height * imgWidth) / canvas.width;

    // ✅ Smart page handling
    if (imgHeight <= pageHeight - 10) {
      pdf.addImage(canvas, 'PNG', 0, 0, imgWidth, imgHeight, '', 'FAST');
    } else {
      let position = 0;
      pdf.addImage(canvas, 'PNG', 0, position, imgWidth, imgHeight, '', 'FAST');
      
      let heightLeft = imgHeight - pageHeight;
      
      while (heightLeft > 30) {
        position = heightLeft - imgHeight;
        pdf.addPage();
        pdf.addImage(canvas, 'PNG', 0, position, imgWidth, imgHeight, '', 'FAST');
        heightLeft -= pageHeight;
      }
    }

    return pdf;

  } catch (error) {
    if (document.body.contains(reportElement)) {
      document.body.removeChild(reportElement);
    }
    throw error;
  }
};
